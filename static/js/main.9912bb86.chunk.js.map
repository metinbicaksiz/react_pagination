{"version":3,"sources":["components/Items/Items.tsx","components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Items","items","map","item","Pagination","currentPage","onPageChange","total","perPage","totalPages","Math","ceil","pages","i","push","className","cn","disabled","href","onClick","num","active","length","from","to","numbers","n","getNumbers","App","useState","page","setPage","itemsPerPage","setItemsPerPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","end","min","id","defaultValue","onChange","e","target","value","htmlFor","pageNumber","ReactDOM","render","document","getElementById"],"mappings":"kMAMaA,EAAyB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvC,OACE,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,S,gBCAJC,EAA8B,SAAC,GAS1C,IAJK,IAJLC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,MACAC,EACI,EADJA,QAEMC,EAAaC,KAAKC,KAAKJ,EAAQC,GAC/BI,EAAQ,GAELC,EAAI,EAAGA,GAAKJ,EAAYI,GAAK,EACpCD,EAAME,KAAKD,GAGb,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUZ,GAAe,IAD3B,SAIE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAI,WAAMb,GACV,gBAAeA,EAAc,EAAI,QAAU,OAC3Cc,QAAS,kBAAMd,EAAc,GAAKC,EAAaD,EAAc,IAL/D,oBAWAO,EAAMV,KAAI,SAACkB,GAAD,OACR,oBACEL,UAAWC,IAAG,YAAa,CACzBK,OAAQhB,IAAgBe,IAF5B,SAME,mBACE,UAAQ,WACRL,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMb,EAAac,IAJ9B,SAMGA,KAREA,MAaX,oBAAIL,UAAWC,IAAG,YAAa,CAC7BC,SAAUZ,GAAeO,EAAMU,SADjC,SAIE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMb,GACV,gBAAeA,IAAgBI,EAAa,OAAS,QACrDU,QAAS,kBAAMd,IAAgBI,GAC1BH,EAAaD,EAAc,IANlC,wBCvDR,IAAMJ,ECPC,SAAoBsB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQX,KAAKY,GAGf,OAAOD,EDAKE,CAAW,EAAG,IACzBzB,KAAI,SAAAwB,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwCF,mBAAS,KAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAAkBJ,GAAQE,EAC1BG,EAAmBD,GAAmBF,EACtCI,EAAenC,EAAMoC,MAAMF,EAAkBD,GAC7CI,EAAM5B,KAAK6B,IAAIJ,IAAoBH,EAAc/B,EAAMqB,QAW7D,OACE,sBAAKP,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWe,EADX,mBAC0BK,EAAmB,EAD7C,cACoDG,EADpD,aAIA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRyB,GAAG,kBACHC,aAAa,IACb1B,UAAU,eACV2B,SApBiB,SAACC,GAC1BV,EAAgBU,EAAEC,OAAOC,OACzBd,EAAQ,IAaF,UAOE,wBAAQc,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,YAAayB,EACbxB,aAxCW,SAACyC,GAChBhB,EAAQgB,IAwCJxC,MAAON,EAAMqB,OACbd,SAAUwB,IAEZ,cAAC,EAAD,CACE/B,MAAOmC,QE5DfY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9912bb86.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  items: string[];\n}\n\nexport const Items: React.FC<Props> = ({ items }) => {\n  return (\n    <ul>\n      {items.map((item) => (\n        <li key={item} data-cy=\"item\">{item}</li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  currentPage: number;\n  onPageChange: (num: number) => void;\n  total: number;\n  perPage: number;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  onPageChange,\n  total,\n  perPage,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = [];\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: currentPage <= 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage > 1 ? 'false' : 'true'}\n          onClick={() => currentPage > 1 && onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {\n        pages.map((num) => (\n          <li\n            className={cn('page-item', {\n              active: currentPage === num,\n            })}\n            key={num}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${num}`}\n              onClick={() => onPageChange(num)}\n            >\n              {num}\n            </a>\n          </li>\n        ))\n      }\n      <li className={cn('page-item', {\n        disabled: currentPage >= pages.length,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          aria-disabled={currentPage === totalPages ? 'true' : 'false'}\n          onClick={() => currentPage !== totalPages\n            && onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Items } from './components/Items';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState('5');\n  const indexOfLastItem = page * +itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - +itemsPerPage;\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n  const end = Math.min(indexOfFirstItem + +itemsPerPage, items.length);\n\n  const paginate = (pageNumber: number) => {\n    setPage(pageNumber);\n  };\n\n  const handleItemsPerPage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(e.target.value);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${indexOfFirstItem + 1} - ${end} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            defaultValue=\"5\"\n            className=\"form-control\"\n            onChange={handleItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentPage={page}\n        onPageChange={paginate}\n        total={items.length}\n        perPage={+itemsPerPage}\n      />\n      <Items\n        items={currentItems}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}